% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_mics.R
\name{simulate_mics}
\alias{simulate_mics}
\title{simulate_mics}
\usage{
simulate_mics(
  n = 100,
  t_dist = function(n) {
     runif(n, min = 0, max = 1)
 },
  pi = function(t) {
     z <- 0.5 + 0.2 * t
     c(`1` = z, `2` = 1 - z)
 },
  `E[X|T,C]` = function(t, c) {
     case_when(c == "1" ~ -1 + t, c == "2" ~ 1 + 0.3 * t,
    TRUE ~ NaN)
 },
  sd_vector = c(`1` = 1, `2` = 0.7),
  covariate_list = list(c("numeric", "normal", 0, 1), c("categorical", c(0.3, 0.4, 0.3))),
  covariate_effect_vector = c(0, 0.2, -1, 0.2),
  conc_limits_table = as_tibble(rbind(c("a", -3, 3), c("b", -4, 4), c("c", -4, 4)),
    .name_repair = "unique") \%>\% rename(covariate_2 = 1, low_cons = 2, high_cons = 3),
  low_con = -4,
  high_con = 4,
  scale = "log"
)
}
\arguments{
\item{t_dist}{t_dist1 = function(n) {runif(n, min = 0, max = 1)}}

\item{pi}{pi = function(t) {z <- 0.5 + 0.2 * t     c(z, 1- z)}}

\item{scale}{}
}
\description{
function that wraps together all the functions that determine t's distribution,
pi and its trends, trends in the mean, component draws, epsilon, covariates,
and censors the data
}
\details{
format for covariate_list: covariate_list = list(c("numeric", "normal", 0, 1), c("categorical", c(0.3, 0.4)), c("numeric", "uniform", 0, 5))
format for covariate_effect_vector: covariate_effect_vector = c(2, #intercept for all covariates combined
                                                                10, #slope for covariate_1
                                                                100, #effect of level b vs a of covariate 2
                                                                3 #slope for covariate_3
                                                                )
}
