% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_mics_with_metadata.R
\name{import_mics_with_metadata}
\alias{import_mics_with_metadata}
\title{Import MICs and Covariates}
\usage{
import_mics_with_metadata(
  data,
  mic_column,
  metadata_columns = NULL,
  code_column = NULL,
  combination_agent = 0,
  log_reg_value = FALSE,
  scale = "log",
  round = FALSE,
  include_mic_bounds = FALSE
)
}
\arguments{
\item{data}{Data frame containing the MICs and covariates}

\item{mic_column}{String, name of column in data corresponding to the MIC values}

\item{metadata_columns}{Vector of column names (as strings) for covariates to be included in the data frame produced}

\item{code_column}{String, name of column containing any symbols for MICs (if data is in a 2 column format)}

\item{combination_agent}{Numerical, if the MIC is not a combination agent, 0. If combination agent must be separated by '/', use 1 to select the value before the '/', or 2 for the value after. Recommend a value where log2(value) is an integer.}

\item{log_reg_value}{Logical, TRUE if a column for logistic regression model should be included in output (MICs with `>` will be doubled, MICs with `<`, `<=`, or `≤` are halved)}

\item{scale}{String, "log" if MIC value should be converted to log2 scale (preferred for subsequent fitting of the model using the EM algorithm)}

\item{round}{Set to true if log2(MIC values) are integers, but decimal MIC values are rounded (e.g. 0.12 in place of 0.125)}

\item{include_mic_bounds}{Logical, if TRUE includes left and right boundaries of interval on MIC scale (in addition to on log2 scale if scale is "log")}
}
\description{
Import MICs and Covariates
}
\examples{
import_mics_with_metadata(data = tibble(MIC_A = c("≤0.12", ">16", 4, 2), t = runif(4, 0, 10)),
                         mic_column = "MIC_A",
                         metadata_columns = "t",
                         log_reg_value = TRUE,
                         scale = "log",
                         round = TRUE)

import_mics_with_metadata(data = tibble(MIC_A = c(0.125, 16, 4, 2), code_A = c("≤", ">", NA, NA), t = runif(4, 0, 10)),
                         mic_column = "MIC_A",
                         metadata_columns = "t",
                         code_column = "code_A",
                         log_reg_value = FALSE,
                         scale = "log",
                         round = FALSE,
                         include_mic_bounds = TRUE)

import_mics_with_metadata(data = tibble(MIC_A = c("≤10/1", ">80/8", "40/4", "20/2"), t = runif(4, 0, 10)),
                         mic_column = "MIC_A",
                         metadata_columns = "t",
                         combination_agent = 2,
                         log_reg_value = FALSE,
                         scale = "log",
                         round = FALSE)

}
