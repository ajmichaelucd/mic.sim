[{"path":"https://ajmichaelucd.github.io/mic.sim/articles/two_comp_mgcv_demo.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"two_comp_mgcv_demo","text":"data generating mechanism Gaussian mixture two components, nonlinear trends component means, fixed component standard deviations, nonlinear trends trends component weights. data interval censored within range tested concentrations tested concentrations (integer values), right censored upper bound (5), left censored lower bound (-3)","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/articles/two_comp_mgcv_demo.html","id":"model-fit","dir":"Articles","previous_headings":"","what":"Model Fit","title":"two_comp_mgcv_demo","text":"model uses EM algorithm estimate trends mu component trends weights components. use mgcv package’s gam function fit , using cnorm family mu models binomial model logit link pi model. compute weights observation plug next model fit next iteration. note, split data component fitting mu models issues ’d run previous attempts fit stratified model also contains splines still using survival package mu models. ’ll look EM algorithm later, first ’d like demonstrate current issue encountering try fit full model run primary issue ’ve : log likelihood decreases steps EM algorithm instead increasing monotonically. instances (though one), also get error data sets reads: Fitting terminated step failure - check results carefully Error gam.fit3(x = X, y = y, sp = L %*% lsp + lsp0, Eb = Eb, UrS = UrS plot log likelihood step, EM algorithm monotonically increasing see drops early, also later.  now thought ’d remove splines see rest algorithm working intended. First, ’ll try fit without nonlinear trends mu pi","code":"output = EM_algorithm_mgcv(example_data,                   mu_formula = yi ~ s(t),                   pi_formula = c == \"2\" ~ s(t),                   max_it = 25,                   ncomp = 2,                   tol_ll = 1e-6,                   browse_at_end = FALSE,                   browse_each_step = FALSE,                   plot_visuals = FALSE,                   prior_step_plot = FALSE,                   pause_on_likelihood_drop = FALSE,                   pi_link = \"logit\",                   verbose = 2,                   model_coefficient_tolerance = 0.00001,                   initial_weighting = 8) #> starting iteration number 1 #> starting iteration number 2 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 3 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 4 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 5 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 6 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 7 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 8 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 9 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 10 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 11 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 12 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 13 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 14 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 15 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 16 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 17 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 18 #> starting iteration number 19 #> starting iteration number 20 #> starting iteration number 21 #> starting iteration number 22 #> starting iteration number 23 #> Warning in EM_algorithm_mgcv(example_data, mu_formula = yi ~ s(t), pi_formula = #> c == : Log Likelihood decreased #> starting iteration number 24 #> starting iteration number 25 #> Warning in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, #> : Fitting terminated with step failure - check results carefully  #> Warning in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, #> : Log Likelihood decreased"},{"path":"https://ajmichaelucd.github.io/mic.sim/articles/two_comp_mgcv_demo.html","id":"no-nonlinear-trends","dir":"Articles","previous_headings":"","what":"No Nonlinear Trends","title":"two_comp_mgcv_demo","text":"used survreg gaussian distribution splines mu models glm logistic regression. Previously, using survreg pspline nonlinear trends EM algorithm also resulted log likelihood decreases tried switching mgcv  log likelihood increases monotonically , ’s good sign  plot looks good Now let’s try add back , starting mu","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/articles/two_comp_mgcv_demo.html","id":"nonlinear-trend-in-mu-only","dir":"Articles","previous_headings":"","what":"Nonlinear trend in mu only","title":"two_comp_mgcv_demo","text":"’d like, now got warnings reading: Fitting terminated step failure - check results carefully definitely decreases likelihood 25 iterations  plot doesn’t look good either, Component 2 upper component lower component 1 Next ’ll nonlinear trends pi  decreases likelihood, ’s good sign  plot looks good . issue likelihood decreases likely lies mu models","code":"#> [1] 1 #> [1] 2 #> [1] 3 #> [1] 4 #> [1] 5 #> [1] 6 #> [1] 7 #> [1] 8 #> [1] 9 #> [1] 10 #> [1] 11 #> [1] 12 #> [1] 13 #> [1] 14 #> [1] 15 #> [1] 16 #> [1] 17 #> [1] 18 #> [1] 19 #> [1] 20 #> [1] 21 #> [1] 22 #> [1] 23 #> Warning in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, #> : Fitting terminated with step failure - check results carefully #> [1] 24 #> Warning in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, #> : Fitting terminated with step failure - check results carefully #> [1] 25 #> Warning in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, #> : Fitting terminated with step failure - check results carefully"},{"path":"https://ajmichaelucd.github.io/mic.sim/articles/two_comp_mgcv_demo.html","id":"how-the-em-algorithm-works","dir":"Articles","previous_headings":"","what":"How the EM algorithm works","title":"two_comp_mgcv_demo","text":"Initial Weighting/First E step weights observations proximity upper lower boundaries  run loop EM algorithm, starting first M step, separate data component fit weighted GAMs cnorm family component means, E(Y|t,c) binomial GAM logit link component weights, P(C=c|t). next E step use models calculate P(C=c|y,t), use observation weights next M step, repeat.","code":"initial_data = example_data %>% mutate(obs_id = row_number()) %>% select(obs_id, everything()) %>%    initial_weighting_fixed_regression_at_boundaries(., 2, 0.2) plot_initial_weighting_regression(initial_data) max_it = 25 likelihood_documentation = matrix(data = NA, nrow = max_it, ncol = 5) likelihood_documentation [,1] <- 1:max_it possible_data = initial_data %>% mutate(       left_bound_mgcv =         case_when(           left_bound == -Inf ~ right_bound,           TRUE ~ left_bound         ),       right_bound_mgcv =         case_when(           left_bound == -Inf ~ -Inf,           TRUE ~ right_bound         )     )  models = list()  for(i in 1:max_it){   print(i)     if(i != 1){         mu_models_old = mu_models_new         pi_model_old = pi_model_new         log_likelihood_old = log_likelihood_new         possible_data_old = possible_data     }      mu_model = function(possible_data, pred_comp){     df = possible_data %>% filter(c == pred_comp & `P(C=c|y,t)` > 0)     df$yi = cbind(df$left_bound_mgcv, df$right_bound_mgcv)     mgcv::gam(yi ~ s(t), family= mgcv::cnorm(link = \"identity\"), weights = `P(C=c|y,t)`, data=df, method = \"ML\")      %>% return()   }      mu_models_new = purrr::map(1:2, ~mu_model(possible_data = possible_data, pred_comp = .x))      pi_model_new = mgcv::gam(c == \"2\" ~ s(t), family = binomial(link = \"logit\"), data = possible_data, weights = `P(C=c|y,t)`, method = \"ML\") %>% suppressWarnings()      possible_data %<>%         mutate(           `E[Y|t,c]` = case_when(c == \"1\" ~ predict(mu_models_new[[1]], newdata = possible_data),                                  c == \"2\" ~ predict(mu_models_new[[2]], newdata = possible_data),                                  TRUE ~ NaN),           `sd[Y|t,c]` = case_when(c == \"1\" ~ mu_models_new[[1]]$family$getTheta(TRUE),                                   c == \"2\" ~ mu_models_new[[2]]$family$getTheta(TRUE), #1,                                   TRUE ~ NaN),           `P(Y|t,c)` = case_when(             left_bound == right_bound ~ dnorm(x = left_bound, mean = `E[Y|t,c]`, sd =  `sd[Y|t,c]`),             left_bound <= `E[Y|t,c]` ~ pnorm(right_bound, mean = `E[Y|t,c]`, sd =  `sd[Y|t,c]`) -               pnorm(left_bound, mean = `E[Y|t,c]`, sd =  `sd[Y|t,c]`),             TRUE ~ pnorm(left_bound, mean = `E[Y|t,c]`, sd =  `sd[Y|t,c]`, lower.tail = FALSE) -               pnorm(right_bound, mean = `E[Y|t,c]`, sd =  `sd[Y|t,c]`, lower.tail = FALSE)),           `P(C=c|t)` = case_when(             c == \"2\" ~ predict(pi_model_new, newdata = tibble(t = t), type = \"response\"),             c == \"1\" ~ 1 - predict(pi_model_new, newdata = tibble(t = t), type = \"response\")),           `P(c,y|t)` = `P(C=c|t)` * `P(Y|t,c)`         ) %>%         mutate(.by = obs_id,                `P(Y=y|t)` = sum(`P(c,y|t)`)) %>%         mutate(           `P(C=c|y,t)` = `P(c,y|t)` / `P(Y=y|t)`)      log_likelihood_obs = possible_data %>%           summarise(.by = obs_id, likelihood_i = sum(`P(c,y|t)`)) %>%           mutate(log_likelihood_i = log(likelihood_i))   log_likelihood_new = sum(log_likelihood_obs$log_likelihood_i)   likelihood_documentation[i, 2] = log_likelihood_new      models[[i]] = list(mu = mu_models_new, pi = pi_model_new, data = possible_data) } #> [1] 1 #> [1] 2 #> [1] 3 #> [1] 4 #> [1] 5 #> [1] 6 #> [1] 7 #> [1] 8 #> [1] 9 #> [1] 10 #> [1] 11 #> [1] 12 #> [1] 13 #> [1] 14 #> [1] 15 #> [1] 16 #> [1] 17 #> [1] 18 #> [1] 19 #> [1] 20 #> [1] 21 #> [1] 22 #> [1] 23 #> [1] 24 #> [1] 25 #> Warning in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, #> : Fitting terminated with step failure - check results carefully  plot_likelihood(likelihood_documentation, format = \"matrix\")"},{"path":"https://ajmichaelucd.github.io/mic.sim/articles/two_comp_mgcv_demo.html","id":"an-observation-on-the-specific-issue","dir":"Articles","previous_headings":"","what":"An Observation on the Specific Issue","title":"two_comp_mgcv_demo","text":"’s something else interesting, change yi ~ s(t) just yi ~ t, still get decreases likelihood difference “nonlinear trends pi ” model just ’m using gam instead survreg, makes think must something wrong ’m using gam(), especially mu component portion","code":"max_it = 20 likelihood_documentation = matrix(data = NA, nrow = max_it, ncol = 5) likelihood_documentation [,1] <- 1:max_it possible_data = initial_data %>% mutate(       left_bound_mgcv =         case_when(           left_bound == -Inf ~ right_bound,           TRUE ~ left_bound         ),       right_bound_mgcv =         case_when(           left_bound == -Inf ~ -Inf,           TRUE ~ right_bound         )     )  models = list()  for(i in 1:max_it){   print(i)     if(i != 1){         mu_models_old = mu_models_new         pi_model_old = pi_model_new         log_likelihood_old = log_likelihood_new         possible_data_old = possible_data     }      mu_model = function(possible_data, pred_comp){     df = possible_data %>% filter(c == pred_comp & `P(C=c|y,t)` > 0)     df$yi = cbind(df$left_bound_mgcv, df$right_bound_mgcv)     mgcv::gam(yi ~ t, family= mgcv::cnorm(link = \"identity\"), weights = `P(C=c|y,t)`, data=df, method = \"ML\")      %>% return()   }      mu_models_new = purrr::map(1:2, ~mu_model(possible_data = possible_data, pred_comp = .x))      pi_model_new = mgcv::gam(c == \"2\" ~ s(t), family = binomial(link = \"logit\"), data = possible_data, weights = `P(C=c|y,t)`, method = \"ML\") %>% suppressWarnings()      possible_data %<>%         mutate(           `E[Y|t,c]` = case_when(c == \"1\" ~ predict(mu_models_new[[1]], newdata = possible_data),                                  c == \"2\" ~ predict(mu_models_new[[2]], newdata = possible_data),                                  TRUE ~ NaN),           `sd[Y|t,c]` = case_when(c == \"1\" ~ mu_models_new[[1]]$family$getTheta(TRUE),                                   c == \"2\" ~ mu_models_new[[2]]$family$getTheta(TRUE), #1,                                   TRUE ~ NaN),           `P(Y|t,c)` = case_when(             left_bound == right_bound ~ dnorm(x = left_bound, mean = `E[Y|t,c]`, sd =  `sd[Y|t,c]`),             left_bound <= `E[Y|t,c]` ~ pnorm(right_bound, mean = `E[Y|t,c]`, sd =  `sd[Y|t,c]`) -               pnorm(left_bound, mean = `E[Y|t,c]`, sd =  `sd[Y|t,c]`),             TRUE ~ pnorm(left_bound, mean = `E[Y|t,c]`, sd =  `sd[Y|t,c]`, lower.tail = FALSE) -               pnorm(right_bound, mean = `E[Y|t,c]`, sd =  `sd[Y|t,c]`, lower.tail = FALSE)),           `P(C=c|t)` = case_when(             c == \"2\" ~ predict(pi_model_new, newdata = tibble(t = t), type = \"response\"),             c == \"1\" ~ 1 - predict(pi_model_new, newdata = tibble(t = t), type = \"response\")),           `P(c,y|t)` = `P(C=c|t)` * `P(Y|t,c)`         ) %>%         mutate(.by = obs_id,                `P(Y=y|t)` = sum(`P(c,y|t)`)) %>%         mutate(           `P(C=c|y,t)` = `P(c,y|t)` / `P(Y=y|t)`)      log_likelihood_obs = possible_data %>%           summarise(.by = obs_id, likelihood_i = sum(`P(c,y|t)`)) %>%           mutate(log_likelihood_i = log(likelihood_i))   log_likelihood_new = sum(log_likelihood_obs$log_likelihood_i)   likelihood_documentation[i, 2] = log_likelihood_new      models[[i]] = list(mu = mu_models_new, pi = pi_model_new, data = possible_data) } #> [1] 1 #> [1] 2 #> [1] 3 #> [1] 4 #> [1] 5 #> [1] 6 #> [1] 7 #> [1] 8 #> [1] 9 #> [1] 10 #> [1] 11 #> [1] 12 #> [1] 13 #> [1] 14 #> [1] 15 #> [1] 16 #> [1] 17 #> [1] 18 #> [1] 19 #> [1] 20  plot_likelihood(likelihood_documentation, format = \"matrix\")"},{"path":"https://ajmichaelucd.github.io/mic.sim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2023). mic.sim: Package (Title Case). R package version 0.2.1,  https://ajmichaelucd.github.io/mic.sim/, https://github.com/ajmichaelucd/mic.sim.","code":"@Manual{,   title = {mic.sim: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2023},   note = {R package version 0.2.1,  https://ajmichaelucd.github.io/mic.sim/},   url = {https://github.com/ajmichaelucd/mic.sim}, }"},{"path":"https://ajmichaelucd.github.io/mic.sim/index.html","id":"micsim","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"Package (Title Case)","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install","title":"What the Package Does (Title Case)","text":"","code":"library(devtools) install_github('ajmichaelucd/mic.sim', build_vignettes = TRUE)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/EM_algorithm_mgcv.html","id":null,"dir":"Reference","previous_headings":"","what":"EM_algorithm_mgcv — EM_algorithm_mgcv","title":"EM_algorithm_mgcv — EM_algorithm_mgcv","text":"EM_algorithm_mgcv","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/EM_algorithm_mgcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EM_algorithm_mgcv — EM_algorithm_mgcv","text":"","code":"EM_algorithm_mgcv(   visible_data,   mu_formula = yi ~ s(t),   pi_formula = c == \"2\" ~ s(t),   max_it = 3000,   ncomp = 2,   tol_ll = 1e-06,   browse_at_end = FALSE,   browse_each_step = FALSE,   plot_visuals = FALSE,   prior_step_plot = FALSE,   pause_on_likelihood_drop = TRUE,   pi_link = \"logit\",   verbose = 3,   model_coefficient_tolerance = 1e-05,   initial_weighting = 8 )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/EM_algorithm_mgcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EM_algorithm_mgcv — EM_algorithm_mgcv","text":"initial_weighting","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/add_covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"add_covariate — add_covariate","title":"add_covariate — add_covariate","text":"adds covariates based covariate_list input vector","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/add_covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add_covariate — add_covariate","text":"","code":"add_covariate(covariate_list, input)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/add_covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add_covariate — add_covariate","text":"input","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/calculate_mu_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — calculate_mu_area","title":"Title — calculate_mu_area","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/calculate_mu_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — calculate_mu_area","text":"","code":"calculate_mu_area(results, settings, directionality, analysis)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/calculate_mu_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — calculate_mu_area","text":"analysis","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/calculate_pi_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — calculate_pi_area","title":"Title — calculate_pi_area","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/calculate_pi_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — calculate_pi_area","text":"","code":"calculate_pi_area(   results,   settings,   directionality,   analysis,   single_model_output )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/calculate_pi_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — calculate_pi_area","text":"single_model_output","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/capture_error_measures_one_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — capture_error_measures_one_batch","title":"Title — capture_error_measures_one_batch","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/capture_error_measures_one_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — capture_error_measures_one_batch","text":"","code":"capture_error_measures_one_batch(   location,   format,   array_name,   date,   i,   number_of_batches )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/capture_error_measures_one_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — capture_error_measures_one_batch","text":"number_of_batches","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/capture_error_measures_one_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — capture_error_measures_one_run","title":"Title — capture_error_measures_one_run","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/capture_error_measures_one_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — capture_error_measures_one_run","text":"","code":"capture_error_measures_one_run(results, settings)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/capture_error_measures_one_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — capture_error_measures_one_run","text":"settings","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/censor_values.html","id":null,"dir":"Reference","previous_headings":"","what":"censor_values — censor_values","title":"censor_values — censor_values","text":"adds new columns left right censoring indicators, setting creation Surv object interval2 format","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/censor_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"censor_values — censor_values","text":"","code":"censor_values(simulated_obs, scale = \"log\")"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/censor_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"censor_values — censor_values","text":"scale","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/censoring_post_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — censoring_post_info","title":"Title — censoring_post_info","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/censoring_post_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — censoring_post_info","text":"","code":"censoring_post_info(possible_data, settings, comparison = \"model_weighted\")"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/censoring_post_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — censoring_post_info","text":"comparison","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_array_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"check_array_complete — check_array_complete","title":"check_array_complete — check_array_complete","text":"check_array_complete","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_array_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check_array_complete — check_array_complete","text":"","code":"check_array_complete(number_of_batches, format, location, array_name, date)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_array_complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check_array_complete — check_array_complete","text":"date","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_directionality.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — check_directionality","title":"Title — check_directionality","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_directionality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — check_directionality","text":"","code":"check_directionality(results = results, settings = settings)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_directionality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — check_directionality","text":"settings","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_for_excessive_censoring.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — check_for_excessive_censoring","title":"Title — check_for_excessive_censoring","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_for_excessive_censoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — check_for_excessive_censoring","text":"","code":"check_for_excessive_censoring(single_model_output, cutoff = 0.9)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_for_excessive_censoring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — check_for_excessive_censoring","text":"cutoff","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_survreg_iteration_maxout.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Survreg Iteration Maxout — check_survreg_iteration_maxout","title":"Check Survreg Iteration Maxout — check_survreg_iteration_maxout","text":"Returns logical value number iterations survreg converge equal maximum number iterations specified","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_survreg_iteration_maxout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Survreg Iteration Maxout — check_survreg_iteration_maxout","text":"","code":"check_survreg_iteration_maxout(mu_models, ncomp, maxiter_survreg)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_survreg_iteration_maxout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Survreg Iteration Maxout — check_survreg_iteration_maxout","text":"mu_models list survreg objects fitted component EM algorithm ncomp number components fitted EM algorithm maxiter_survreg maximum number iterations survreg fit model","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_weigh_prop_cens.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — check_weigh_prop_cens","title":"Title — check_weigh_prop_cens","text":"Get weighted sum proportion censored observations component possible data","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_weigh_prop_cens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — check_weigh_prop_cens","text":"","code":"check_weigh_prop_cens(df = a, comp_i = \"2\", side = \"rc\", cutoff = 0.9)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/check_weigh_prop_cens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — check_weigh_prop_cens","text":"cutoff","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/component_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"component_mean — component_mean","title":"component_mean — component_mean","text":"component_mean","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/component_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"component_mean — component_mean","text":"","code":"component_mean(   n = 100,   t_dist = function(n) {      runif(n, min = 0, max = 1)  },   pi = function(t) {      z <- 0.5 + 0.2 * t      tibble(`1` = z, `2` = 1 - z)  },   `E[X|T,C]` = function(t, c) {      case_when(c == \"1\" ~ 3 + t + 2 * t^2 - sqrt(t), c ==     \"2\" ~ 3 * t, TRUE ~ NaN)  } )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/component_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"component_mean — component_mean","text":"`E[X|T, C]`","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/covariate_effect_total.html","id":null,"dir":"Reference","previous_headings":"","what":"covariate_effect_total — covariate_effect_total","title":"covariate_effect_total — covariate_effect_total","text":"uses model.matrix ","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/covariate_effect_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"covariate_effect_total — covariate_effect_total","text":"","code":"covariate_effect_total(data_tibble, covariate_effect_vector)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/covariate_effect_total.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"covariate_effect_total — covariate_effect_total","text":"covariate_effect_vector","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/draw_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"draw_covariates — draw_covariates","title":"draw_covariates — draw_covariates","text":"draw_covariates function uses draw_categorical_covariate draw_numerical_covariate add covariates dataframe tibble drawn observations","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/draw_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"draw_covariates — draw_covariates","text":"","code":"draw_covariates(input, cov_list)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/draw_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"draw_covariates — draw_covariates","text":"cov_list","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/draw_covariates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"draw_covariates — draw_covariates","text":"cov_list list object vectors vector covariate added, either numeric categorical first value vector either \"numeric\" \"categorical\" numeric variables, second value specify whether drawn normal uniform distribution using \"normal\" \"uniform\" next two values mean sd drawn normal distribution min max drawn uniform distribution categorical variables, remaining values vector probabilities level variable, labeled , b, c, example: cov_list <- list( c(\"numeric\", \"normal\", 40, 4), c(\"categorical\", 0.3, 0.4, 0.3), c(\"categorical\", 0.5, 0.2, 0.3), c(\"categorical\", 0.2, 0.2, 0.2, 0.2, 0.2), c(\"numeric\", \"uniform\", 1, 10))","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/draw_epsilon.html","id":null,"dir":"Reference","previous_headings":"","what":"draw_epsilon — draw_epsilon","title":"draw_epsilon — draw_epsilon","text":"draw_epsilon","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/draw_epsilon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"draw_epsilon — draw_epsilon","text":"","code":"draw_epsilon(   n = 100,   t_dist = function(n) {      runif(n, min = 0, max = 1)  },   pi = function(t) {      z <- 0.5 + 0.2 * t      tibble(`1` = z, `2` = 1 - z)  },   `E[X|T,C]` = function(t, c) {      case_when(c == \"1\" ~ 3 + t + 2 * t^2 - sqrt(t), c ==     \"2\" ~ 3 * t, TRUE ~ NaN)  },   sd_vector = c(`1` = 1, `2` = 2) )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/draw_epsilon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"draw_epsilon — draw_epsilon","text":"sd_vector","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/find_censoring_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — find_censoring_levels","title":"Title — find_censoring_levels","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/find_censoring_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — find_censoring_levels","text":"","code":"find_censoring_levels(visible_data)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/find_censoring_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — find_censoring_levels","text":"visible_data","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_all_mu_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit All Mu Models — fit_all_mu_models","title":"Fit All Mu Models — fit_all_mu_models","text":"Loops function fits survreg component iterations (1 number components fitted EM algorithm)","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_all_mu_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit All Mu Models — fit_all_mu_models","text":"","code":"fit_all_mu_models(possible_data, ncomp, mu_formula, maxiter_survreg)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_all_mu_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit All Mu Models — fit_all_mu_models","text":"possible_data data frame iterated EM algorithm, contain left_bound, right_bound, c, P(C=c|y,t), covariates, time, e.g. \"t\" ncomp number components fitted EM algorithm mu_formula formula used fit model mu, contain Surv object outcome covariates interest, accepts pspline arguments survreg maxiter_survreg maximum number iterations survreg fit model","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_model_pi.html","id":null,"dir":"Reference","previous_headings":"","what":"fit_model_pi — fit_model_pi","title":"fit_model_pi — fit_model_pi","text":"fit_model_pi","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_model_pi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit_model_pi — fit_model_pi","text":"","code":"fit_model_pi(   visible_data,   mu_formula = Surv(time = left_bound, time2 = right_bound, type = \"interval2\") ~     pspline(t, df = 0, calc = TRUE),   pi_formula = c == \"2\" ~ s(t),   max_it = 3000,   ncomp = 2,   tol_ll = 1e-06,   browse_at_end = FALSE,   browse_each_step = FALSE,   plot_visuals = FALSE,   prior_step_plot = FALSE,   pi_link = \"logit\",   verbose = 3,   model_coefficient_tolerance = 1e-05,   maxiter_survreg = 30,   initial_weighting = 8,   stop_on_likelihood_drop = TRUE )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_model_pi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit_model_pi — fit_model_pi","text":"initial_weighting","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_model_safety_pi.html","id":null,"dir":"Reference","previous_headings":"","what":"fit_modek_safety_pi — fit_model_safety_pi","title":"fit_modek_safety_pi — fit_model_safety_pi","text":"fit_modek_safety_pi","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_model_safety_pi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit_modek_safety_pi — fit_model_safety_pi","text":"","code":"fit_model_safety_pi(   visible_data = prep_sim_data_for_em(),   formula = Surv(time = left_bound, time2 = right_bound, type = \"interval2\") ~ pspline(t,     df = 0, calc = TRUE),   formula2 = c == \"2\" ~ s(t),   fm_check = \"RC\",   max_it = 3000,   ncomp = 2,   tol_ll = 1e-06,   browse_at_end = FALSE,   browse_each_step = FALSE,   plot_visuals = FALSE,   pi_link = \"logit\",   verbose = 3,   model_coefficient_tolerance = 1e-05,   maxiter_survreg = 30,   stop_on_likelihood_drop = TRUE,   extra_row = FALSE )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_model_safety_pi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit_modek_safety_pi — fit_model_safety_pi","text":"maxiter_survreg","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_mu_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Mu Model — fit_mu_model","title":"Fit Mu Model — fit_mu_model","text":"Function filter data desired component using variable c fit survreg data using formula supplied user, typically passed EM algorithm","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_mu_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Mu Model — fit_mu_model","text":"","code":"fit_mu_model(possible_data, pred_comp, mu_formula, maxiter_survreg = 30)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_mu_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Mu Model — fit_mu_model","text":"possible_data data frame iterated EM algorithm, contain left_bound, right_bound, c, P(C=c|y,t), covariates, time, e.g. \"t\" mu_formula formula used fit model mu, contain Surv object outcome covariates interest, accepts pspline arguments survreg maxiter_survreg maximum number iterations survreg fit model comp numeric variable, component model fitted , e.g. 2","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_pi_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Pi Model — fit_pi_model","title":"Fit Pi Model — fit_pi_model","text":"Fits weighted binomial model using either logit identity function estimate covariate effects component weights, pi. Uses gam function gam package.","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_pi_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Pi Model — fit_pi_model","text":"","code":"fit_pi_model(pi_formula, pi_link, possible_data)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fit_pi_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Pi Model — fit_pi_model","text":"pi_formula formula used fit binomial model pi, component weights. left hand side designate level c, component classify event, right hand side include covariates. Accepts smoothing splines s() local regression lo() gam package. Example formula: c == \"2\" ~ s(t) pi_link string specifying whether use logit identity link function. Possible options \"logit\" \"identity\" possible_data data frame iterated EM algorithm, contain left_bound, right_bound, c, P(C=c|y,t), covariates, time, e.g. \"t\"","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fm_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — fm_checks","title":"Title — fm_checks","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fm_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — fm_checks","text":"","code":"fm_checks(single_model_output_fm)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/fm_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — fm_checks","text":"single_model_output_fm","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/full_sim_in_1_function.html","id":null,"dir":"Reference","previous_headings":"","what":"full_sim_in_1_function — full_sim_in_1_function","title":"full_sim_in_1_function — full_sim_in_1_function","text":"full_sim_in_1_function","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/full_sim_in_1_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"full_sim_in_1_function — full_sim_in_1_function","text":"","code":"full_sim_in_1_function(   i,   n = 150,   t_dist = function(n) {      runif(n, min = 0, max = 15)  },   pi = function(t) {      m <- 0.6 + 0.02 * (t^2) - 0.0015 * (t^3)      z <- exp(m)/(1 +     exp(m))      tibble(`1` = 1 - z, `2` = z)  },   `E[X|T,C]` = function(t, c) {      case_when(c == \"1\" ~ -2 - 0.01 * (t^2), c == \"2\" ~ 2     + 0.2 * t, TRUE ~ NaN)  },   sd_vector = c(`1` = 1, `2` = 1),   covariate_list = NULL,   covariate_effect_vector = c(0),   covariate_names = NULL,   conc_limits_table = NULL,   low_con = -4,   high_con = 4,   scale = \"log\",   formula = Surv(time = left_bound, time2 = right_bound, type = \"interval2\") ~ pspline(t,     df = 0, calc = TRUE),   formula2 = c == \"2\" ~ s(t),   max_it = 3000,   ncomp = 2,   tol_ll = 1e-06,   maxiter_survreg = 30,   pi_link = \"logit\",   verbose = 3,   allow_safety = TRUE,   cutoff = 0.9,   fms_only = FALSE,   initial_weighting = 1,   keep_true_values = TRUE,   max_cens_tolerance = 0.8,   ... )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/full_sim_in_1_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"full_sim_in_1_function — full_sim_in_1_function","text":"keep_true_values","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/gen_path_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"gen_path_sim — gen_path_sim","title":"gen_path_sim — gen_path_sim","text":"Creates names individual batches load , useful combination map function loadRData","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/gen_path_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gen_path_sim — gen_path_sim","text":"","code":"gen_path_sim(location, format, array_name, date, i)"},{"path":[]},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/import_mics.html","id":null,"dir":"Reference","previous_headings":"","what":"import_mics — import_mics","title":"import_mics — import_mics","text":"import_mics","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/import_mics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"import_mics — import_mics","text":"","code":"import_mics(mic_column, code_column = NULL, combination_agent = FALSE)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/import_mics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"import_mics — import_mics","text":"combination_agent","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/initial_weighting_fixed_regression_at_boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Intial Weighting Scheme: Fixed Regression at Boundaries — initial_weighting_fixed_regression_at_boundaries","title":"Intial Weighting Scheme: Fixed Regression at Boundaries — initial_weighting_fixed_regression_at_boundaries","text":"Fits regression lines slope = 0 high_con low_con sigma values 0.2 times difference high_con low_con, calculates initial weights ","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/initial_weighting_fixed_regression_at_boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intial Weighting Scheme: Fixed Regression at Boundaries — initial_weighting_fixed_regression_at_boundaries","text":"","code":"initial_weighting_fixed_regression_at_boundaries(   visible_data,   ncomp,   sd_parameter = 0.2 )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/initial_weighting_fixed_regression_at_boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intial Weighting Scheme: Fixed Regression at Boundaries — initial_weighting_fixed_regression_at_boundaries","text":"visible_data data frame passed EM algorithm, minimum consists : id column, time column, left_bound, right_bound, low_con, high_con ncomp number components model fitted, weighting scheme valid 2 component models","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/loadRData.html","id":null,"dir":"Reference","previous_headings":"","what":"loadRData — loadRData","title":"loadRData — loadRData","text":"Borrowed https://stackoverflow.com//25455968 import Rdata files assign variable name","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/loadRData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"loadRData — loadRData","text":"","code":"loadRData(fileName)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/loadRData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"loadRData — loadRData","text":"fileName","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/local_full_run_function.html","id":null,"dir":"Reference","previous_headings":"","what":"local_full_run_function — local_full_run_function","title":"local_full_run_function — local_full_run_function","text":"local_full_run_function","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/local_full_run_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"local_full_run_function — local_full_run_function","text":"","code":"local_full_run_function(args, batch_size = 10, run_name, rerun_parameters)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/local_full_run_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"local_full_run_function — local_full_run_function","text":"cutoff","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/log_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — log_reg","title":"Title — log_reg","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/log_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — log_reg","text":"","code":"log_reg(   data,   data_type,   drug,   date_col,   date_type,   first_year,   s_breakpoint,   r_breakpoint )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/log_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — log_reg","text":"data either possible_data set mic data ready want run import_mics data_type use either \"possible_data\" passing possible_data object \"import\" want import mics run logistic regression drug NULL using possible_data, importing data name column mics vector mic column sign colomn date_col string, name column data corresponds time sampling date_type string, either \"decimal\", \"date\", \"year\" use decimal using t possible data, date year importing mic data date column date just year respectively first_year NULL date_type \"decimal\", otherwise numeric year decimal year value using \"year\" \"date\" date_type respectively s_breakpoint string, breakpoint MIC scale constitutes susceptible isolate, e.g. ≤8 (µg/mL, incude units) r_breakpoint string, breakpoint MIC scale constitutes resistant isolate, e.g. ≥128 (µg/mL, incude units)","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/mic.sim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mic.sim: What the Package Does (Title Case) — mic.sim-package","title":"mic.sim: What the Package Does (Title Case) — mic.sim-package","text":"(maybe one line) Use four spaces indenting paragraphs within Description.","code":""},{"path":[]},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_fm.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plot_fm","title":"Title — plot_fm","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_fm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plot_fm","text":"","code":"plot_fm(   output,   title,   add_log_reg = FALSE,   s_breakpoint = NA,   r_breakpoint = NA,   use_prior_step = FALSE,   range_zoom = FALSE )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_fm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plot_fm","text":"r_breakpoint","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_fm_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plot_fm_step","title":"Title — plot_fm_step","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_fm_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plot_fm_step","text":"","code":"plot_fm_step(   pi_model_new,   mu_models_new,   ncomp,   possible_data,   prior_step_plot = FALSE,   i,   mu_models_old = NULL,   pi_model_old = NULL )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_fm_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plot_fm_step","text":"pi_model_old","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_fms.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plot_fms","title":"Title — plot_fms","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_fms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plot_fms","text":"","code":"plot_fms(   output,   title,   cens_dir,   add_log_reg = FALSE,   s_breakpoint = NULL,   r_breakpoint = NULL )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_fms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plot_fms","text":"title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_initial_weighting_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plot_initial_weighting_regression","title":"Title — plot_initial_weighting_regression","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_initial_weighting_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plot_initial_weighting_regression","text":"","code":"plot_initial_weighting_regression(possible_data)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_initial_weighting_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plot_initial_weighting_regression","text":"possible_data","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_iteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plot_iteration","title":"Title — plot_iteration","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_iteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plot_iteration","text":"","code":"plot_iteration(   iteration,   number_per_batch,   analysis = NULL,   location,   format,   array_name,   date )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_iteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plot_iteration","text":"date","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plot_likelihood","title":"Title — plot_likelihood","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plot_likelihood","text":"","code":"plot_likelihood(likelihood_documentation, format)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/plot_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plot_likelihood","text":"format","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/prep_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — prep_df","title":"Title — prep_df","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/prep_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — prep_df","text":"","code":"prep_df(organism, drug, data)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/prep_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — prep_df","text":"data","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/prep_sim_data_for_em.html","id":null,"dir":"Reference","previous_headings":"","what":"Intermediate function to prepare simulated data for use in EM algorithm — prep_sim_data_for_em","title":"Intermediate function to prepare simulated data for use in EM algorithm — prep_sim_data_for_em","text":"Intermediate function prepare simulated data use EM algorithm","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/prep_sim_data_for_em.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intermediate function to prepare simulated data for use in EM algorithm — prep_sim_data_for_em","text":"","code":"prep_sim_data_for_em(   data.sim = simulate_mics(),   left_bound_name = \"left_bound\",   right_bound_name = \"right_bound\",   time = \"t\",   covariate_names = NULL,   scale = NULL,   keep_truth = FALSE,   observed_value_name = \"observed_value\",   comp_name = \"comp\",   low_con_name = \"low_con\",   high_con_name = \"high_con\" )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/prep_sim_data_for_em.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intermediate function to prepare simulated data for use in EM algorithm — prep_sim_data_for_em","text":"high_con_name","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/rerun_incomplete_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — rerun_incomplete_sets","title":"Title — rerun_incomplete_sets","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/rerun_incomplete_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — rerun_incomplete_sets","text":"","code":"rerun_incomplete_sets(   location,   incomplete,   number_per_batch,   array_name,   date,   rerun_parameters )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/rerun_incomplete_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — rerun_incomplete_sets","text":"cutoff","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/scale_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — scale_select","title":"Title — scale_select","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/scale_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — scale_select","text":"","code":"scale_select(results, directionality, analysis, single_model_output)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/scale_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — scale_select","text":"single_model_output","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/sim_pi_survreg_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sim_pi_survreg_boot","title":"Title — sim_pi_survreg_boot","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/sim_pi_survreg_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sim_pi_survreg_boot","text":"","code":"sim_pi_survreg_boot(df, fit, alpha = 0.05, nSims = 10000)"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/sim_pi_survreg_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sim_pi_survreg_boot","text":"distr","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/sim_pi_survreg_boot_mgcv.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sim_pi_survreg_boot_mgcv","title":"Title — sim_pi_survreg_boot_mgcv","text":"Title","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/sim_pi_survreg_boot_mgcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sim_pi_survreg_boot_mgcv","text":"","code":"sim_pi_survreg_boot_mgcv(   df,   fit,   alpha = 0.05,   nSims = 10000,   distr = \"gaussian\" )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/sim_pi_survreg_boot_mgcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sim_pi_survreg_boot_mgcv","text":"distr","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/simulate_mics.html","id":null,"dir":"Reference","previous_headings":"","what":"simulate_mics — simulate_mics","title":"simulate_mics — simulate_mics","text":"function wraps together functions determine t's distribution, pi trends, trends mean, component draws, epsilon, covariates, censors data","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/simulate_mics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simulate_mics — simulate_mics","text":"","code":"simulate_mics(   n = 100,   t_dist = function(n) {      runif(n, min = 0, max = 1)  },   pi = function(t) {      z <- 0.5 + 0.002 * t      tibble(`1` = z, `2` = 1 - z)  },   `E[X|T,C]` = function(t, c) {      case_when(c == \"1\" ~ -1 + t, c == \"2\" ~ 1 + 0.3 * t,     TRUE ~ NaN)  },   sd_vector = c(`1` = 1, `2` = 0.7),   covariate_list = list(c(\"numeric\", \"normal\", 0, 1), c(\"categorical\", c(0.3, 0.4, 0.3))),   covariate_effect_vector = c(0, 0.2, -1, 0.2),   conc_limits_table = as_tibble(rbind(c(\"a\", -3, 3), c(\"b\", -4, 4), c(\"c\", -4, 4)),     .name_repair = \"unique\") %>% rename(covariate_2 = 1, low_cons = 2, high_cons = 3),   low_con = -4,   high_con = 4,   scale = \"log\" )"},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/simulate_mics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simulate_mics — simulate_mics","text":"t_dist t_dist1 = function(n) runif(n, min = 0, max = 1) pi pi = function(t) z <- 0.5 + 0.2 * t     c(z, 1- z) scale","code":""},{"path":"https://ajmichaelucd.github.io/mic.sim/reference/simulate_mics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"simulate_mics — simulate_mics","text":"format covariate_list: covariate_list = list(c(\"numeric\", \"normal\", 0, 1), c(\"categorical\", c(0.3, 0.4)), c(\"numeric\", \"uniform\", 0, 5)) format covariate_effect_vector: covariate_effect_vector = c(2, #intercept covariates combined                                                                 10, #slope covariate_1                                                                 100, #effect level b vs covariate 2                                                                 3 #slope covariate_3                                                                 )","code":""}]
